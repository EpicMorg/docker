os: linux
dist: bionic #https://docs.travis-ci.com/user/reference/overview/
language: bash
services:
  - docker
addons:
  apt:
    packages:
      - docker-ce
matrix:
  include:
#########################################
####  Forked and fixed images
#########################################
    - name: Zabbix Agent
      script:
      - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
      - docker build --compress -t epicmorg/zabbix-agent:latest zabbix/agent
      - docker push epicmorg/zabbix-agent:latest

    - name: Zabbix Java Gateway
      script:
      - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
      - docker build --compress -t epicmorg/zabbix-java-gateway:latest zabbix/java-gateway
      - docker push epicmorg/zabbix-java-gateway:latest

    - name: Zabbix Server with MySQL
      script:
      - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
      - docker build --compress -t epicmorg/zabbix-server-mysql:latest zabbix/server
      - docker push epicmorg/zabbix-server-mysql:latest

    - name: Zabbix Web Apache2 with MySQL
      script:
      - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
      - docker build --compress -t epicmorg/zabbix-web-apache-mysql:latest zabbix/web
      - docker push epicmorg/zabbix-web-apache-mysql:latest

##########

    - name: NextCloud (latest)
      script:
      - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
      - docker build --compress -t epicmorg/nextcloud:latest nextcloud/latest
      - docker push epicmorg/nextcloud:latest
      
#########################################
####  Our High priority images
#########################################

#    - name: Template
#      script:
#      - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
#      - docker build --compress -t user/repo:tag path/to/folder/contains/dockerfile
#      - docker push user/repo:tag

    - name: Base Production
      script:
      - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
      - docker build --compress -t epicmorg/prod:latest epicmorg/prod/main
      - docker push epicmorg/prod:latest

    - name: Base Production + JDK 6
      script:
      - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
      - docker build --compress -t epicmorg/prod:jdk6 epicmorg/prod/jdk6
      - docker push epicmorg/prod:jdk6

    - name: Base Production + JDK 7
      script:
      - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
      - docker build --compress -t epicmorg/prod:jdk7 epicmorg/prod/jdk7
      - docker push epicmorg/prod:jdk7

    - name: Base Production + JDK 8
      script:
      - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
      - docker build --compress -t epicmorg/prod:jdk8 epicmorg/prod/jdk8
      - docker push epicmorg/prod:jdk8

    - name: Base Production + JDK 11
      script:
      - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
      - docker build --compress -t epicmorg/prod:jdk11 epicmorg/prod/jdk11
      - docker push epicmorg/prod:jdk11

##########

    - name: Base Edge
      script:
      - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
      - docker build --compress -t epicmorg/edge:latest epicmorg/edge/main
      - docker push epicmorg/edge:latest

    - name: Base Edge + JDK 6
      script:
      - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
      - docker build --compress -t epicmorg/edge:jdk6 epicmorg/edge/jdk6
      - docker push epicmorg/edge:jdk6

    - name: Base Edge + JDK 7
      script:
      - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
      - docker build --compress -t epicmorg/edge:jdk7 epicmorg/edge/jdk7
      - docker push epicmorg/edge:jdk7

    - name: Base Edge + JDK 8
      script:
      - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
      - docker build --compress -t epicmorg/edge:jdk8 epicmorg/edge/jdk8
      - docker push epicmorg/edge:jdk8

    - name: Base Edge + JDK 11
      script:
      - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
      - docker build --compress -t epicmorg/edge:jdk11 epicmorg/edge/jdk11
      - docker push epicmorg/edge:jdk11

##########

    - name: Base Develop
      script:
      - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
      - docker build --compress -t epicmorg/devel:latest epicmorg/devel/main
      - docker push epicmorg/devel:latest

    - name: Base Develop + JDK 6
      script:
      - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
      - docker build --compress -t epicmorg/devel:jdk6 epicmorg/devel/jdk6
      - docker push epicmorg/devel:jdk6

    - name: Base Develop + JDK 7
      script:
      - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
      - docker build --compress -t epicmorg/devel:jdk7 epicmorg/devel/jdk7
      - docker push epicmorg/devel:jdk7

    - name: Base Develop + JDK 8
      script:
      - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
      - docker build --compress -t epicmorg/devel:jdk8 epicmorg/devel/jdk8
      - docker push epicmorg/devel:jdk8

    - name: Base Develop + JDK 11
      script:
      - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
      - docker build --compress -t epicmorg/devel:jdk11 epicmorg/devel/jdk11
      - docker push epicmorg/devel:jdk11

##########

    - name: TeamCity Agent
      script:
      - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
      - docker build --compress -t epicmorg/teamcity-agent:latest teamcity-agent
      - docker push epicmorg/teamcity-agent:latest

    - name: NGinx (latest)
      script:
      - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
      - docker build --compress -t epicmorg/balancer:latest balancer/latest
      - docker push epicmorg/balancer:latest

    - name: NGinx + PHP7.4
      script:
      - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
      - docker build --compress -t epicmorg/balancer:php balancer/php
      - docker push epicmorg/balancer:php

    - name: NGinx + RTMP-HLS
      script:
      - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
      - docker build --compress -t epicmorg/balancer:rtmp-hls balancer/rtmp-hls
      - docker push epicmorg/balancer:rtmp-hls


    - name: Apache (latest)
      script:
      - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
      - docker build --compress -t epicmorg/websites:latest websites/latest
      - docker push epicmorg/websites:latest

    - name: Apache + PHP7.4
      script:
      - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
      - docker build --compress -t epicmorg/websites:latest websites/php7.4
      - docker push epicmorg/websites:php7.4

    - name: Apache + PHP7.3
      script:
      - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
      - docker build --compress -t epicmorg/websites:php7.3 websites/php7.3
      - docker push epicmorg/websites:php7.3

    - name: Apache + PHP7.2
      script:
      - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
      - docker build --compress -t epicmorg/websites:php7.2 websites/php7.2
      - docker push epicmorg/websites:php7.2

    - name: Testrail (always latest)
      script:
      - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
      - docker build --compress -t epicmorg/testrail:latest tesrtail
      - docker push epicmorg/testrail:latest

    - name: PostgresSQL (latest)
      script:
      - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
      - docker build --compress -t epicmorg/postgres:latest postgres/latest
      - docker push epicmorg/postgres:latest


##########

    - name: Bitbucket + JDK 8 (latest)
      script:
      - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
      - docker build --compress -t epicmorg/bitbucket:latest atlassian/bitbucket/latest 
      - docker push epicmorg/bitbucket:latest
      
    - name: Bitbucket + JDK 11 (latest-jdk11)
      script:
      - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
      - docker build --compress -t epicmorg/bitbucket:latest-jdk11 -f atlassian/bitbucket/latest/Dockerfile.jdk11 atlassian/bitbucket/latest
      - docker push epicmorg/bitbucket:latest-jdk11

    - name: Confluence + JDK 8 (latest)
      script:
      - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
      - docker build --compress -t epicmorg/confluence:latest atlassian/confluence/latest
      - docker push epicmorg/confluence:latest

    - name: Confluence + JDK 11 (latest-jdk11)
      script:
      - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin 
      - docker build --compress -t epicmorg/confluence:latest-jdk11 -f atlassian/confluence/latest/Dockerfile.jdk11 atlassian/confluence/latest
      - docker push epicmorg/confluence:latest-jdk11

    - name: Jira + JDK 8 (latest)
      script:
      - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin 
      - docker build --compress -t epicmorg/jira:latest atlassian/jira/latest
      - docker push epicmorg/jira:latest
      
    - name: Jira + JDK 11 (latest-jdk11)
      script:
      - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin 
      - docker build --compress -t epicmorg/jira:latest-jdk11 -f atlassian/jira/latest/Dockerfile.jdk11 atlassian/jira/latest
      - docker push epicmorg/jira:latest-jdk11

    - name: Fisheye + Crucible + JDK 8 (latest)
      script:
      - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin 
      - docker build --compress -t epicmorg/fisheye-crucible:latest atlassian/fisheye-crucible/latest
      - docker push epicmorg/fisheye-crucible:latest

    - name: Postgres (latest)
      script:
      - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
      - docker build --compress -t epicmorg/postgres:latest postgres/latest
      - docker push epicmorg/postgres:latest

 ##########

    - name: qBitTorrent (latest)
      script:
      - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
      - docker build --compress -t epicmorg/qbittorrent:latest qbittorrent/latest
      - docker push epicmorg/qbittorrent:latest

    - name: qBitTorrent (unstable)
      script:
      - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
      - docker build --compress -t epicmorg/qbittorrent:unstable qbittorrent/latest
      - docker push epicmorg/qbittorrent:unstable

    - name: qBitTorrent (stable)
      script:
      - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
      - docker build --compress -t epicmorg/qbittorrent:stable qbittorrent/stable
      - docker push epicmorg/qbittorrent:stable
 
#########################################
####  Our minor priority images
#########################################

