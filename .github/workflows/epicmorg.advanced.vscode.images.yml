name: EpicMorg Advanced Vscode Server Images

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * 2,4,6'

jobs:
  build-main-images:
    name: Build VSCode Main Images
    runs-on: ubuntu-24.04
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Log into docker registry
      run: echo "${{ secrets.DOCKER_SERVER_KEY }}" | docker login -u "${{ secrets.DOCKER_SERVER_LOGIN }}" --password-stdin

    - name: Log into Quay.IO registry
      run: echo "${{ secrets.QUAY_SERVER_KEY }}" | docker login -u "${{ secrets.QUAY_SERVER_LOGIN }}" --password-stdin "${{ secrets.QUAY_SERVER_URL }}"

    - name: Check buildah
      run: buildah --version

    - name: Test Make
      run: make

    - name: Install requirements.txt
      run: make pip

    - name: Build and Deploy VSCode Server Latest
      run: cd linux/advanced/vscode-server/latest && pwd && make build && make deploy

    - name: Build and Deploy VSCode Server CPP
      run: cd linux/advanced/vscode-server/cpp && pwd && make build && make deploy

  build-other-images:
    name: Build VSCode ${{ matrix.image.type }} ${{ matrix.image.version || '' }}
    runs-on: ubuntu-24.04
    needs: build-main-images
    strategy:
      matrix:
        image: [
          # AMXX versions
          {type: 'amxx', version: '1.9', path: 'amxx/1.9'},
          {type: 'amxx', version: '1.10', path: 'amxx/1.10'},
          
          # Other single-version images
          {type: 'android', path: 'android'},
          {type: 'nodejs', path: 'nodejs'},
          {type: 'docker', path: 'docker'},
          {type: 'dotnet', path: 'dotnet'},
          {type: 'dotnet-full', path: 'dotnet-full'},
          {type: 'mono', path: 'mono'}
        ]


    steps:
    - uses: actions/checkout@v4
    
    - name: Log into docker registry
      run: echo "${{ secrets.DOCKER_SERVER_KEY }}" | docker login -u "${{ secrets.DOCKER_SERVER_LOGIN }}" --password-stdin

    - name: Log into Quay.IO registry
      run: echo "${{ secrets.QUAY_SERVER_KEY }}" | docker login -u "${{ secrets.QUAY_SERVER_LOGIN }}" --password-stdin "${{ secrets.QUAY_SERVER_URL }}"

    - name: Check buildah
      run: buildah --version

    - name: Test Make
      run: make

    - name: Install requirements.txt
      run: make pip

    - name: Build and Deploy VSCode Server ${{ matrix.image.type }} ${{ matrix.image.version || '' }}
      run: cd linux/advanced/vscode-server/${{ matrix.image.path }} && pwd && make build && make deploy

    - name: Cleanup
      run: make clean
