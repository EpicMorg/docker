name: EpicMorg Base - Debian 08 Images

on:
  workflow_dispatch:
  schedule:
    - cron:  '0 0 * * 1,3,5'

jobs:
  build-base-images:
    name: Build Debian 8 Base Images
    runs-on: ubuntu-24.04

    steps:
    - uses: actions/checkout@v4
    
    - name: Log into docker registry
      run: echo "${{ secrets.DOCKER_SERVER_KEY }}" | docker login -u "${{ secrets.DOCKER_SERVER_LOGIN }}" --password-stdin

    - name: Log into Quay.IO registry
      run: echo "${{ secrets.QUAY_SERVER_KEY }}" | docker login -u "${{ secrets.QUAY_SERVER_LOGIN }}" --password-stdin "${{ secrets.QUAY_SERVER_URL }}"

    - name: Check buildah
      run: buildah --version

    - name: Test Make
      run: make

    - name: Install requirements.txt
      run: make pip

    - name: Build and Deploy Debian 8 slim
      run: cd linux/ecosystem/epicmorg/debian/08-jessie/slim && pwd && make build && make deploy

    - name: Build and Deploy Debian 8 main
      run: cd linux/ecosystem/epicmorg/debian/08-jessie/main && pwd && make build && make deploy
      
    - name: Build and Deploy Debian 8 develop
      run: cd linux/ecosystem/epicmorg/debian/08-jessie/develop && pwd && make build && make deploy

    - name: Cleanup
      run: make clean

  build-node-images:
    name: Build Debian 8 Node.js ${{ matrix.version }}
    runs-on: ubuntu-24.04
    needs: build-base-images
    strategy:
      matrix:
        version: [
          '0.12', '4', '5', '6', '7', '8', '9',
          '10', '11', '12', '13', '14', '15', '16', '17'
          ]

    steps:
    - uses: actions/checkout@v4
    
    - name: Log into docker registry
      run: echo "${{ secrets.DOCKER_SERVER_KEY }}" | docker login -u "${{ secrets.DOCKER_SERVER_LOGIN }}" --password-stdin

    - name: Log into Quay.IO registry
      run: echo "${{ secrets.QUAY_SERVER_KEY }}" | docker login -u "${{ secrets.QUAY_SERVER_LOGIN }}" --password-stdin "${{ secrets.QUAY_SERVER_URL }}"

    - name: Check buildah
      run: buildah --version

    - name: Test Make
      run: make

    - name: Install requirements.txt
      run: make pip

    - name: Build and Deploy Node.js ${{ matrix.version }}
      run: cd linux/ecosystem/epicmorg/debian/08-jessie/nodejs/node${{ matrix.version }} && pwd && make build && make deploy

    - name: Cleanup
      run: make clean

  build-jdk-images:
    name: Build Debian 8 JDK ${{ matrix.version }}
    runs-on: ubuntu-24.04
    needs: build-base-images
    strategy:
      matrix:
        version: [
          '6', '7',
          '8', '11', '17', '21',
          '16',  '18', '19', '20',  '22'
          ]

    steps:
    - uses: actions/checkout@v4
    
    - name: Log into docker registry
      run: echo "${{ secrets.DOCKER_SERVER_KEY }}" | docker login -u "${{ secrets.DOCKER_SERVER_LOGIN }}" --password-stdin

    - name: Log into Quay.IO registry
      run: echo "${{ secrets.QUAY_SERVER_KEY }}" | docker login -u "${{ secrets.QUAY_SERVER_LOGIN }}" --password-stdin "${{ secrets.QUAY_SERVER_URL }}"

    - name: Check buildah
      run: buildah --version

    - name: Test Make
      run: make

    - name: Install requirements.txt
      run: make pip

    - name: Build and Deploy JDK ${{ matrix.version }}
      run: cd linux/ecosystem/epicmorg/debian/08-jessie/jdk/jdk${{ matrix.version }} && pwd && make build && make deploy

    - name: Cleanup
      run: make clean
