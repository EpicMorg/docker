name: EpicMorg EcoSystem Web Images

on:
  workflow_dispatch:
#  schedule:
#    - cron:  '2 2 * * 1,3,5'

jobs:

  build-apache2-images:
    name: Build EpicMorg Apache 2 Images
    runs-on: [ubuntu-24.04]

    steps:
    - uses: actions/checkout@v4
    
    - name: Log into docker registry
      run:  echo "${{ secrets.DOCKER_SERVER_KEY }}" | docker login -u "${{ secrets.DOCKER_SERVER_LOGIN }}" --password-stdin

    - name: Log into Quay.IO registry
      run:  echo "${{ secrets.QUAY_SERVER_KEY }}" | docker login -u "${{ secrets.QUAY_SERVER_LOGIN }}" --password-stdin "${{ secrets.QUAY_SERVER_URL }}"

#    - name: Log into harbor registry
#      run:  echo "${{ secrets.HARBOR_SERVER_KEY }}" | docker login -u "${{ secrets.HARBOR_SERVER_LOGIN }}" --password-stdin "${{ secrets.HARBOR_SERVER_URL }}"

    - name: Check buildah
      run:  |
        buildah --version
        buildah info

    - name: Test Make
      run:  make

    - name: Install requirements.txt
      run:  make pip

#    - name: "Build and Deploy Apache 2 Latest Image:"
#      run:  cd linux/ecosystem/apache2/latest    && pwd && make build && make deploy

    - name: "Build and Deploy Apache 2 + PHP 5.6 Image:"
      run:  cd linux/ecosystem/apache2/php5.6    && pwd && make build && make deploy

    - name: "Build and Deploy Apache 2 + PHP 7.0 Image:"
      run:  cd linux/ecosystem/apache2/php7.0    && pwd && make build && make deploy

    - name: "Build and Deploy Apache 2 + PHP 7.1 Image:"
      run:  cd linux/ecosystem/apache2/php7.1    && pwd && make build && make deploy

    - name: "Build and Deploy Apache 2 + PHP 7.2 Image:"
      run:  cd linux/ecosystem/apache2/php7.2    && pwd && make build && make deploy

##################################################################################

    - name: Cleanup
      run: make clean

##################################################################################

    - name: "Build and Deploy Apache 2 + PHP 7.3 Image:"
      run:  cd linux/ecosystem/apache2/php7.3    && pwd && make build && make deploy

    - name: "Build and Deploy Apache 2 + PHP 7.4 Image:"
      run:  cd linux/ecosystem/apache2/php7.4    && pwd && make build && make deploy

    - name: "Build and Deploy Apache 2 + PHP 8.0 Image:"
      run:  cd linux/ecosystem/apache2/php8.0    && pwd && make build && make deploy

##################################################################################

    - name: Cleanup
      run: make clean

##################################################################################

    - name: "Build and Deploy Apache 2 + PHP 8.1 Image:"
      run:  cd linux/ecosystem/apache2/php8.1    && pwd && make build && make deploy

    - name: "Build and Deploy Apache 2 + PHP 8.2 Image:"
      run:  cd linux/ecosystem/apache2/php8.2    && pwd && make build && make deploy

    - name: "Build and Deploy Apache 2 + PHP 8.3 Image:"
      run:  cd linux/ecosystem/apache2/php8.3    && pwd && make build && make deploy

    - name: "Build and Deploy Apache 2 + PHP 8.4 Image:"
      run:  cd linux/ecosystem/apache2/php8.4    && pwd && make build && make deploy

# ##################################################################################
# 
#   build-nginx-images:
#     name: Build EpicMorg NginX Images
#     runs-on: [ubuntu-24.04]
# 
#     steps:
#     - uses: actions/checkout@v4
#     - name: Log into registry
#       run:  echo "${{ secrets.DOCKER_SERVER_KEY }}" | docker login -u "${{ secrets.DOCKER_SERVER_LOGIN }}" --password-stdin
# 
#     - name: Test Make
#       run:  make
# 
#     - name: Install requirements.txt
#       run:  make pip
# 
#     - name: "Build and Deploy NginX Image:"
#       run:  cd linux/ecosystem/nginx/latest/mainline/main    && pwd && make build && make deploy
# 
#     - name: "Build and Deploy NginX + PHP7.4 Image:"
#       run:  cd linux/ecosystem/nginx/latest/mainline/php     && pwd && make build && make deploy
# 
#     - name: "Build and Deploy NginX + RTMP-HLS Image:"
#       run:  cd linux/ecosystem/nginx/latest/mainline/rtmp-hls    && pwd && make build && make deploy
# 
# #    - name: "Build and Deploy NginX (quic, http3) Image:"
# #      run:  cd linux/ecosystem/nginx/latest/quic/main    && pwd && make build && make deploy
# 
# #    - name: "Build and Deploy NginX  (quic, http3) + PHP7.4 Image:"
# #      run:  cd linux/ecosystem/nginx/latest/quic/php     && pwd && make build && make deploy
# 
# #    - name: "Build and Deploy NginX  (quic, http3) + RTMP-HLS Image:"
# #      run:  cd linux/ecosystem/nginx/latest/quic/rtmp-hls    && pwd && make build && make deploy
# 
# ##################################################################################

    - name: Cleanup
      run: make clean
